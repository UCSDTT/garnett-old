FORMAT: 1A

# Garnett API
Garnett API is an internal service for UCSD Theta Tau's *Garnett* web application. Garnett has a
timeline-focused approach that encourages social networking based on events.

###Useful Links
+ [Github](https://github.com/UCSDTT/Garnett/)
+ [Understanding HTTP](http://code.tutsplus.com/tutorials/http-the-protocol-every-web-developer-must-know-part-1--net-31177)
+ [HTTP Response Codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes)

###Errors and Suggestions
Please notify the Garnett API developers on Slack if there are any inconsistencies with 
the API or if you have any feature requests.

# Group Members
Members related resources of the **Garnett API**.

## Members Collection [/notes]
Actions for manipulating or retrieving information from the collection of members.
### Retrieve all Members [GET]
+ Response 200 (application/json)

        [{
            "id": 1,
            "first_name": "Michael",
            "last_name": "Luo",
            "username": "mzluo",
            "password": "password",
            "email": "mzluo@tt.com",
            "phone_number": "510-999-5555",
            "start_year": 2011,
            "grad_year": 2015,
            "major": "Computer Science",
            "class": "Iota",
            "security_question": "This is a security question",
            "security_answer": "This is a security question answer",
            "active_id": 110,
            "created_on": "2014-12-01T22:32:40.898Z"
        },
        {
            "id": 2,
            "first_name": "Benjie",
            "last_name": "Genchel",
            "username": "bgenchel",
            "password": "banana",
            "email": "bgenchel@tt.com",
            "phone_number": "345-333-2323",
            "start_year": 2010,
            "grad_year": 2014,
            "major": "Electrical Engineering",
            "class": "Eta",
            "security_question": "This is a security question",
            "security_answer": "This is a security answer",
            "active_id":111,
            "created_on": "2014-12-01T22:32:40.898Z"
        }]

### Create a Member [POST]

+ Request (application/json)


        {
            "first_name": "Michael",
            "last_name": "Luo",
            "username": "mzluo",
            "password": "password",
            "email": "mzluo@tt.com",
            "phone_number": "510-999-5555",
            "start_year": 2011,
            "grad_year": 2015,
            "major": "Computer Science",
            "class": "Iota",
            "security_question": "This is a security question",
            "security_answer": "This is a security question answer",
            "active_id": 110
        }

+ Response 201 (application/json)

        {
            "id": 1,
            "message": "Created new member"
        }

+ Response 409 (application/json)

        {
            "error": "Duplicate member exists with active_id: 110 or username: mzluo"
        }

## Member [/members/{memberid}]
Manipulate a single member object or retrieve information from it.

+ Parameters
    + memberid (required, number, `1`) ... Numeric `id` of the Member to perform action with. Has example value.

### Retrieve a Member [GET]
+ Response 200 (application/json)

    + Body

            [{
                "id": 1,
                "first_name": "Michael",
                "last_name": "Luo",
                "username": "mzluo",
                "password": "password",
                "email": "mzluo@tt.com",
                "phone_number": "510-999-5555",
                "start_year": 2011,
                "grad_year": 2015,
                "major": "Computer Science",
                "class": "Iota",
                "security_question": "This is a security question",
                "security_answer": "This is a security question answer",
                "active_id": 110,
                "created_on": "2014-12-01T22:32:40.898Z"
            }]
            
+ Response 404 (application/json)

    + Body

            []

### Remove a Member [DELETE]
+ Response 200 (application/json)

    + Body
    
            {
                "id": 1,
                "message": "Deleted a member"
            }

+ Response 404 (application/json)

    + Body
            
            {
                "error": "Could not find member to delete"
            }
            
### Update a Member [POST]

+ Request (application/json)

    + Body
            
            {
                "active_id": 100,
                "first_name": "Michael",
                "last_name": "Luo",
                "username": "mzluo",
                "password": "betterpassword",
                "email": "mzluo@tt.com",
                "phone_number": "444-223-1231",
                "start_year": 2012,
                "grad_year": 2016,
                "major": "Computer Science",
                "class": "Iota"
            }

+ Response 200 (application/json)

    + Body
        
            {
                "id": 1,
                "message": "Updated existing member"
            }
            
+ Response 404 (application/json)

    + Body
        
            {
                "error": "Could not find member to update"
            }








